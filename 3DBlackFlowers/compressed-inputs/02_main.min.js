function ocmCallback() {
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
    const renderer = new THREE.WebGLRenderer({ antialias: true });
    renderer.setSize(window.innerWidth, window.innerHeight);

    // Function for the generation of 3D Black Flowers
    function generate3DBlackFlower(count, xOri, yOri, zOri, min, max, coneBase, coneHeight, conseSides)  {
        for (let i = 0; i < count; i++) {
            // Random X-Y-Z-coordinates within the specified range
            const minRange = min * 2 * Math.PI
            const maxRange = max * 2 * Math.PI
            const x = Math.random() * (maxRange - minRange) + minRange;
            const y = Math.random() * (maxRange - minRange) + minRange;
            const z = Math.random() * (maxRange - minRange) + minRange;
            // Create the cone geometry
            const coneGeometry = new THREE.ConeGeometry(coneBase, coneHeight, conseSides);
            // Create a random grey color for each cone
            const floatColor = 0.0 + Math.random() * (1.0 - 0.0);
            const threeColor = new THREE.Color();
            const material = new THREE.MeshBasicMaterial({ color: threeColor.setScalar(floatColor) });
            // Create a mesh and position it
            const cone = new THREE.Mesh(coneGeometry, material);
            cone.position.set(xOri, yOri, zOri);
            cone.rotation.set(xOri+x, yOri+y, zOri+z);
            // Add the cone to the scene
            scene.add(cone);
        }
    }

    // Big Black Flowers
    generate3DBlackFlower(4880, 1, 1, 3, -1, 1, 0.001, 12, 16);
    generate3DBlackFlower(4880, -14, 12, 1, -1, 1, 0.001, 12, 16);
    generate3DBlackFlower(4880, 12, 9, 2, -1, 1, 0.001, 12, 16);
    generate3DBlackFlower(4880, -8, -4, -1, -1, 1, 0.001, 12, 16);
    generate3DBlackFlower(4880, 6, -14, 2, -1, 1, 0.001, 12, 16);
    // Medium Black Flowers
    generate3DBlackFlower(4880, -4, 22, -3, -1, 1, 0.002, 8, 16);
    generate3DBlackFlower(4880, 12, -8, 3, -1, 1, 0.002, 8, 16);
    generate3DBlackFlower(4880, -10, -18, 0, -1, 1, 0.002, 8, 16);
    // Small Black Flowers
    generate3DBlackFlower(2180, 0, 20, 1, -1, 1, 0.004, 4, 16);
    generate3DBlackFlower(2180, -8, 10, 0, -1, 1, 0.004, 4, 16);
    generate3DBlackFlower(2180, -4, -16, 2, -1, 1, 0.004, 4, 16);
    generate3DBlackFlower(2180, 5, 5, 6, -1, 1, 0.004, 4, 16);
    generate3DBlackFlower(2180, -0.5, -24, 0, -1, 1, 0.004, 4, 16);

    // Define some variables for camera animation
    let cameraRadius = 5; // Radius of the circular path
    let cameraSpeed = 0.1; // Speed of the camera's movement
    let cameraAngle = 0; // Current angle of the camera
    camera.position.z = 30;

    function animate() {
        requestAnimationFrame(animate);
        
        // Calculate the new camera position
        camera.position.x = cameraRadius * Math.cos(cameraAngle);
        camera.position.y = cameraRadius * Math.sin(cameraAngle);
        // Update the camera angle for the next frame
        cameraAngle += cameraSpeed;
        // Make the camera look at the center of your 3D scene
        camera.lookAt(scene.position);
        renderer.render(scene, camera);
    }

    animate();
    document.querySelector("#scene").appendChild(renderer.domElement);
}
